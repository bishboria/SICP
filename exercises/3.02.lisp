(define (make-monitored f)
  (let ((calls 0))
    (define (reset-count)
      (set! calls 0))
    (define (how-many-calls?)
      calls)
    (define (call-f arg)
      (set! calls (+ calls 1))
      (f arg))
    (lambda (m)
      (cond ((eq? m 'reset-count) (reset-count))
            ((eq? m 'how-many-calls?) (how-many-calls?))
            (else (call-f m))))))

(define s (make-monitored sqrt))
(s 100)
(s 'how-many-calls?)
(s 16)
(s 'how-many-calls?)
